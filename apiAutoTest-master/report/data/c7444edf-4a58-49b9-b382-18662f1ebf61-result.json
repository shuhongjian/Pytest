{"name": "get请求查询用户数据列表", "status": "failed", "statusDetails": {"message": "AssertionError: 第1个断言失败 -|- 实际结果:{'msg': 'pagenum 参数错误', 'status': 400} || 预期结果: {'msg': '登录成功', 'status': 200}", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': 'pagenum 参数错误', 'status': 400}}\nexpect_str = '{\"$.meta\":{\\'msg\\': \\'登录成功\\', \\'status\\': 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        allure_step(\"当前可用参数池\", cls.extra_pool)\n        expect_str = rep_expr(expect_str, cls.extra_pool)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(\n                f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言', f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:133: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['c4', 'get请求查询用户数据列表', '', 'users', 'get', 'data', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = client.action(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': 'pagenum 参数错误', 'status': 400}}\nexpect_str = '{\"$.meta\":{\\'msg\\': \\'登录成功\\', \\'status\\': 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        allure_step(\"当前可用参数池\", cls.extra_pool)\n        expect_str = rep_expr(expect_str, cls.extra_pool)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(\n                f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言', f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(\n                    f'第{index}个断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 第1个断言失败 -|- 实际结果:{'msg': 'pagenum 参数错误', 'status': 400} || 预期结果: {'msg': '登录成功', 'status': 200}\n\ntools\\data_process.py:135: AssertionError"}, "steps": [{"name": "请求地址: http://api.zreai.com:606/api/private/v1/users", "status": "passed", "start": 1640080922720, "stop": 1640080922720}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "e1639b00-c15c-4699-907b-6ee75b7e24ac-attachment.json", "type": "application/json"}], "start": 1640080922720, "stop": 1640080922737}, {"name": "请求数据", "status": "passed", "attachments": [{"name": "请求数据", "source": "e1f9f2cc-af0e-4eb8-a563-405e9a64e7b3-attachment.json", "type": "application/json"}], "start": 1640080922737, "stop": 1640080922737}, {"name": "响应耗时(s): 0.038738", "status": "passed", "start": 1640080922768, "stop": 1640080922768}, {"name": "响应结果", "status": "passed", "attachments": [{"name": "响应结果", "source": "c901b809-c74b-4ef3-9ac5-859f1cec6526-attachment.json", "type": "application/json"}], "start": 1640080922768, "stop": 1640080922768}, {"name": "当前可用参数池", "status": "passed", "attachments": [{"name": "当前可用参数池", "source": "5838a728-97b0-45ce-914f-a79c39198fce-attachment.json", "type": "application/json"}], "start": 1640080922768, "stop": 1640080922783}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "df5163a5-b4ca-4f59-a137-d1d8e151fa8b-attachment.json", "type": "application/json"}], "start": 1640080922783, "stop": 1640080922783}], "parameters": [{"name": "cases", "value": "['c4', 'get请求查询用户数据列表', '', 'users', 'get', 'data', '', '{\"pagenum\": 1, \"pagesize\": \"12\"}', '', '', '{\"$.meta\":${meta}}']"}], "start": 1640080922720, "stop": 1640080922783, "uuid": "2581f9d8-527c-480e-9265-c18ae7af8aa3", "historyId": "f9a3a528aa08d345b131e068670a2332", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-CJL4PLI"}, {"name": "thread", "value": "14256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}